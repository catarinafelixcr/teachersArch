# Generated by Django 5.2 on 2025-04-28 21:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilizador',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('activation_token', models.CharField(blank=True, db_index=True, max_length=128, null=True, unique=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('group_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('repo_url', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('utilizador', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('link_gitlab', models.CharField(blank=True, max_length=512, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlunoGitlabAct',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('handle', models.CharField(max_length=128)),
                ('total_commits', models.BigIntegerField()),
                ('sum_lines_added', models.BigIntegerField()),
                ('sum_lines_deleted', models.BigIntegerField()),
                ('sum_lines_per_commit', models.BigIntegerField()),
                ('active_days', models.BigIntegerField()),
                ('last_minute_commits', models.BooleanField()),
                ('total_merge_requests', models.BigIntegerField()),
                ('merged_requests', models.BigIntegerField()),
                ('review_comments_given', models.BigIntegerField()),
                ('review_comments_received', models.BigIntegerField()),
                ('total_issues_created', models.BigIntegerField()),
                ('total_issues_assigned', models.BigIntegerField()),
                ('issues_resolved', models.BooleanField()),
                ('issue_participation', models.BooleanField()),
                ('branches_created', models.BigIntegerField()),
                ('merges_to_main_branch', models.BigIntegerField()),
                ('data_registo', models.DateTimeField(default=django.utils.timezone.now)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grupo')),
            ],
            options={
                'unique_together': {('group', 'handle')},
            },
        ),
        migrations.CreateModel(
            name='Previsao',
            fields=[
                ('prevision_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('prev_category', models.CharField(max_length=55)),
                ('prev_grade', models.BigIntegerField()),
                ('faling_risk', models.BooleanField()),
                ('prev_date', models.DateTimeField(auto_now_add=True)),
                ('aluno_gitlabact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previsoes', to='api.alunogitlabact')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('prev_date', 'student')},
            },
        ),
        migrations.CreateModel(
            name='AlunoGitlabactPrevisao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno_gitlabact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.alunogitlabact')),
                ('previsao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.previsao')),
            ],
            options={
                'unique_together': {('aluno_gitlabact', 'previsao')},
            },
        ),
        migrations.CreateModel(
            name='PrevisaoGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grupo')),
                ('previsao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.previsao')),
            ],
            options={
                'unique_together': {('previsao', 'grupo')},
            },
        ),
        migrations.CreateModel(
            name='GrupoProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grupo')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.project')),
            ],
            options={
                'unique_together': {('grupo', 'project')},
            },
        ),
        migrations.CreateModel(
            name='TeacherGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grupo')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'grupo')},
            },
        ),
    ]
